// Code generated by MockGen. DO NOT EDIT.
// Source: transform.go

// Package main is a generated GoMock package.
package main

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockTransformer is a mock of Transformer interface.
type MockTransformer struct {
	ctrl     *gomock.Controller
	recorder *MockTransformerMockRecorder
}

// MockTransformerMockRecorder is the mock recorder for MockTransformer.
type MockTransformerMockRecorder struct {
	mock *MockTransformer
}

// NewMockTransformer creates a new mock instance.
func NewMockTransformer(ctrl *gomock.Controller) *MockTransformer {
	mock := &MockTransformer{ctrl: ctrl}
	mock.recorder = &MockTransformerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTransformer) EXPECT() *MockTransformerMockRecorder {
	return m.recorder
}

// transform mocks base method.
func (m *MockTransformer) transform(appRequest *AppRequest) (*ExtRequest, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "transform", appRequest)
	ret0, _ := ret[0].(*ExtRequest)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// transform indicates an expected call of transform.
func (mr *MockTransformerMockRecorder) transform(appRequest interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "transform", reflect.TypeOf((*MockTransformer)(nil).transform), appRequest)
}
